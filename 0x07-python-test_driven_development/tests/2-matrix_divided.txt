1. Divide a matrix
========================

Using 2-matrix_divided.py
-------------------------

This function divides all elements of a matrix. ``matrix_divided(matrix, div)``.

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [
    ... [1, 2, 3],
    ... [4, 5, 6]
    ... ]

    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> print(matrix_divided(matrix, 7))
    [[0.14, 0.29, 0.43], [0.57, 0.71, 0.86]]

    >>> print(matrix_divided(matrix, 7.5))
    [[0.13, 0.27, 0.4], [0.53, 0.67, 0.8]]

    >>> print(matrix_divided(matrix, -2))
    [[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

    >>> print(matrix_divided(matrix, 1))
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

    >>> print(matrix_divided(matrix, 0.5))
    [[2.0, 4.0, 6.0], [8.0, 10.0, 12.0]]

    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> print(matrix_divided(matrix, 5))
    [[0.2, 0.4, 0.6], [0.8, 1.0, 1.2]]

    >>> print(matrix_divided(None))
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> print(matrix_divided(matrix, "hello"))
    Traceback (most recent call last):
    TypeError: div must be a number

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
